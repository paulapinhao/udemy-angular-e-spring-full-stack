{"ast":null,"code":"import { Cliente } from '../cliente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../clientes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-mask\";\n\nfunction ClientesFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Cliente salvo/atualizado com sucesso! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientesFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r6, \" \");\n  }\n}\n\nfunction ClientesFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 11)(2, \"div\", 12)(3, \"label\");\n    i0.ɵɵtext(4, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"div\", 12)(8, \"label\");\n    i0.ɵɵtext(9, \"Data Cadastro:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.cliente.id);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.cliente.dataCadastro);\n  }\n}\n\nfunction ClientesFormComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵelement(1, \"i\", 25);\n    i0.ɵɵtext(2, \" Salvar \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientesFormComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵelement(1, \"i\", 27);\n    i0.ɵɵtext(2, \" Atualizar \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ClientesFormComponent = /*#__PURE__*/(() => {\n  class ClientesFormComponent {\n    constructor(service, router, activatedRoute) {\n      this.service = service;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.success = false;\n      this.cliente = new Cliente();\n    }\n\n    ngOnInit() {\n      let params = this.activatedRoute.params;\n      params.subscribe(urlParams => {\n        this.id = urlParams['id'];\n\n        if (this.id) {\n          this.service.getClienteById(this.id).subscribe(response => this.cliente = response, errorResponse => this.cliente = new Cliente());\n        }\n      });\n    }\n\n    voltarParaListagem() {\n      this.router.navigate(['/clientes-lista']);\n    }\n\n    onSubmit() {\n      if (this.id) {\n        this.service.atualizar(this.cliente).subscribe(response => {\n          this.success = true;\n          this.errors = null;\n        }, errorResponse => {\n          this.errors = ['Erro ao atualizar o cliente.'];\n        });\n      } else {\n        this.service.salvar(this.cliente).subscribe(response => {\n          this.success = true;\n          this.errors = null;\n          this.cliente = response;\n        }, errorResponse => {\n          this.success = false;\n          this.errors = errorResponse.error.errors;\n        });\n      }\n    }\n\n  }\n\n  ClientesFormComponent.ɵfac = function ClientesFormComponent_Factory(t) {\n    return new (t || ClientesFormComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  ClientesFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientesFormComponent,\n    selectors: [[\"app-clientes-form\"]],\n    decls: 31,\n    vars: 8,\n    consts: [[1, \"mt-4\"], [1, \"breadcrumb\", \"mb-4\"], [1, \"breadcrumb-item\", \"active\"], [1, \"container\"], [3, \"ngSubmit\"], [\"clienteForm\", \"ngForm\"], [1, \"row\"], [1, \"col-md-12\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"cpf\", \"mask\", \"000.000.000-00\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-3\"], [\"type\", \"submit\", \"class\", \"btn btn-success\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"ml-1\", 3, \"click\"], [1, \"fa\", \"fa-arrow-alt-circle-left\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"type\", \"text\", \"name\", \"id\", \"disabled\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"text\", \"name\", \"dataCadastro\", \"disabled\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"fa\", \"fa-save\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"fa\", \"fa-sync-alt\"]],\n    template: function ClientesFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Clientes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ol\", 1)(3, \"li\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function ClientesFormComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵtemplate(10, ClientesFormComponent_div_10_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(11, ClientesFormComponent_div_11_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, ClientesFormComponent_div_12_Template, 11, 2, \"div\", 10);\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"div\", 11)(15, \"div\", 12)(16, \"label\");\n        i0.ɵɵtext(17, \"Nome *:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientesFormComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.cliente.nome = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12)(21, \"label\");\n        i0.ɵɵtext(22, \"CPF *:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function ClientesFormComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.cliente.cpf = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(24, \"div\", 6)(25, \"div\", 15);\n        i0.ɵɵtemplate(26, ClientesFormComponent_button_26_Template, 3, 0, \"button\", 16);\n        i0.ɵɵtemplate(27, ClientesFormComponent_button_27_Template, 3, 0, \"button\", 17);\n        i0.ɵɵelementStart(28, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function ClientesFormComponent_Template_button_click_28_listener() {\n          return ctx.voltarParaListagem();\n        });\n        i0.ɵɵelement(29, \"i\", 19);\n        i0.ɵɵtext(30, \" Voltar \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.cliente.id ? \"Edi\\u00E7\\u00E3o\" : \"Cadastro\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cliente.id);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.nome);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.cpf);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.cliente.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cliente.id);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i5.MaskDirective]\n  });\n  return ClientesFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}